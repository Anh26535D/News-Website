version: "2"

networks:
  bridge:


services:

  #############################################################################################
  # Kafka and Kafka UI
  #############################################################################################
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # Listener settings
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      # Other settings
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
    networks:
      - bridge

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    volumes:
      - "./mount_tools/kafka_ui/config.yml:/etc/kafkaui/dynamic_config.yaml"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    depends_on:
      - kafka
    networks:
      - bridge

  #############################################################################################
  # Spark
  #############################################################################################
  # spark-master:
  #   image: docker.io/bitnami/spark:3.3
  #   container_name: spark
  #   ports:
  #     - "8888:8888"
  #     - "7077:7077"
  #   volumes:
  #     - ./:/app/
  #   environment:
  #     - SPARK_MASTER_WEBUI_PORT=8888
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_USER=spark
  #   depends_on:
  #     - kafka
  #   networks:
  #     - bridge

  # spark-submit:
  #   image: docker.io/bitnami/spark:3.3
  #   container_name: spark_submit
  #   volumes:
  #     - ./:/app/
  #   environment:
  #     SPARK_MODE: worker
  #     SPARK_MASTER_URL: spark://spark-master:7077
  #     SPARK_WORKER_MEMORY: 1G
  #     SPARK_WORKER_CORES: 1
  #     SPARK_RPC_AUTHENTICATION_ENABLED: no
  #     SPARK_RPC_ENCRYPTION_ENABLED: no
  #     SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
  #     SPARK_SSL_ENABLED: no
  #     SPARK_USER: spark
  #   command:
  #     - "sh"
  #     - "-c"
  #     - |
  #       cd /app/
  #       pip install -r requirements.txt
  #       bash submit_job.sh
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - bridge

  # spark-worker-1:
  #   image: docker.io/bitnami/spark:3.3
  #   container_name: spark_worker_1
  #   environment:
  #     SPARK_MODE: worker
  #     SPARK_MASTER_URL: spark://spark-master:7077
  #     SPARK_WORKER_MEMORY: 1G
  #     SPARK_WORKER_CORES: 1
  #     SPARK_RPC_AUTHENTICATION_ENABLED: no
  #     SPARK_RPC_ENCRYPTION_ENABLED: no
  #     SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
  #     SPARK_SSL_ENABLED: no
  #     SPARK_USER: spark
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - bridge

  # spark-worker-2:
  #   image: docker.io/bitnami/spark:3.3
  #   container_name: spark_worker_2
  #   environment:
  #     SPARK_MODE: worker
  #     SPARK_MASTER_URL: spark://spark-master:7077
  #     SPARK_WORKER_MEMORY: 1G
  #     SPARK_WORKER_CORES: 1
  #     SPARK_RPC_AUTHENTICATION_ENABLED: no
  #     SPARK_RPC_ENCRYPTION_ENABLED: no
  #     SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
  #     SPARK_SSL_ENABLED: no
  #     SPARK_USER: spark
  #   networks:
  #     - bridge

volumes:

  kafka_data:
    driver: local
